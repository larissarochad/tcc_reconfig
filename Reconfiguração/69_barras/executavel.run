reset;


#--------------------
# incluir o modrlo matematico
#--------------------r

reset;

# incluir o modelo matematico
#--------------------

model;

include 4_FluxoDePotenciaNaoLinear_PQ.mod;

#--------------------
# dados do sistema
#--------------------r

data;

#include 69_barras.dat;
include 33_barras.dat;

#--------------------
# solucionador


option solver cplex;
option presolve_eps 8.53e-15 ;
solve FuncionObjetivo;
option cplex_options "time=1000 mipdisplay = 2 "; 

param Vpu{Ob};
param Pperdas{Ol}; # Perda de potencia ativa nas linhas
param Qperdas{Ol}; # Perda de potencia reativa nas linhas

printf'\n\n';
printf'|-------------------------------------|\n';
printf'|  Solucao do Fluxo de potencia para  |\n';
printf'| Sistemas de distribuicao de energia |\n';
printf'|-------------------------------------|\n';

for {i in Ob, t in Ot }{
	let Vpu[i] := sqrt(Vsqr[i,t])/Vnom;
}

#--------------------

printf'\n\n|-------------------------------------|\n';
printf'|              Tensoes                |\n';
printf'|-----------|-----------|-------------|\n';
printf'|   Barra   |  V [kV]   |  V [p.u.]   |\n';
printf'|-----------|-----------|-------------|\n';

for{i in Ob, t in Ot}{
	printf'%10d  %10.4f  %12.4f \n', i, sqrt(Vsqr[i,t]), Vpu[i];
}
#printf'|-----------|-----------|-------------|\n';
printf'-----------------------------------\n';
#--------------------
# Calcular as perdas nas linhas

for{(i,j) in Ol, t in Ot}{
	let Pperdas[i,j] := R[i,j] * Isqr[i,j,t];
	let Qperdas[i,j] := X[i,j] * Isqr[i,j,t];
}

#--------------------
printf'\n\n|------------------------------------------------------------------------------------|\n';
printf'|                                 Resultados Linhas                                  |\n';
printf'|-------|-------|-----------|-----------|------------|--------------|----------------|\n';
printf'|   i   |   j   |  I [Amp]  |  P [kW]   |  Q [kVar]  | Pperdas [kW] | Qperdas [kVar] |\n';
printf'|-------|-------|-----------|-----------|------------|--------------|----------------|\n';

for{(i,j) in Ol, t in Ot}{
	printf'|%6d |%6d |%10.4f |%10.4f |%11.4f |%13.4f |%15.4f |\n', i, j, sqrt(Isqr[i,j,t]), P[i,j,t], Q[i,j,t], Pperdas[i,j], Qperdas[i,j];
}
#printf'|-------|-------|-----------|-	----------|------------|--------------|----------------|\n';
printf'------------------------------------------------------------------------------\n';

printf'\n\n';


printf' Pperdas = %13.4f\n', sum{(i,j) in Ol}( Pperdas[i,j] );



for{(i,j) in Ol, t in Ot}{
	if(y_positivo[i,j,t] == 0 && y_negativo[i,j,t] == 0) then {
	printf '\n %d \n', linea[i,j]; 
	
	}
}

