#--------------------
# Lucca Rodrigues Pinto

reset;

#--------------------
# incluir o modelo matematico
#--------------------

model;

include Reconfiguracao_Linear_33.mod;

#--------------------
# dados do sistema
#--------------------

data;

include 33_barras.dat;

#--------------------
# solucionador

option solver cplex;
option presolve_eps 8.53e-15;
solve FuncaoObjetivo;

param Vpu{Ob};
param Pperdas{Ol}; # Perda de potencia ativa nas linhas
param Qperdas{Ol}; # Perda de potencia reativa nas linhas

option log_file "resultados_reconfiguracao_novo.txt";

printf'\n\n';
printf'|-------------------------------------|\n';
printf'|    Solucao da reconfiguracao para   |\n';
printf'| Sistemas de distribuicao de energia |\n';
printf'|-------------------------------------|\n';

for {i in Ob}{
	let Vpu[i] := sqrt(Vsqr[i])/Vnom;
}

#--------------------

printf'\n\n|-------------------------------------|\n';
printf'|              Tensoes                |\n';
printf'|-----------|-----------|-------------|\n';
printf'|   Barra   |  V [kV]   |  V [p.u.]   |\n';
printf'|-----------|-----------|-------------|\n';

for{i in Ob}{
	printf'|%10d |%10.4f |%12.4f |\n', i, sqrt(Vsqr[i]), Vpu[i];
}
printf'|-----------|-----------|-------------|\n';

#--------------------
# Calcular as perdas nas linhas

for{(i,j) in Ol}{
	let Pperdas[i,j] := R[i,j] * Isqr[i,j];
	let Qperdas[i,j] := X[i,j] * Isqr[i,j];
}

#--------------------
printf'\n\n|------------------------------------------------------------------------------------|\n';
printf'|                                 Resultados Linhas                                  |\n';
printf'|-------|-------|-----------|-----------|------------|--------------|----------------|\n';
printf'|   i   |   j   |  I [Amp]  |  P [kW]   |  Q [kVar]  | Pperdas [kW] | Qperdas [kVar] |\n';
printf'|-------|-------|-----------|-----------|------------|--------------|----------------|\n';

for{(i,j) in Ol}{
	printf'|%6d |%6d |%10.4f |%10.4f |%11.4f |%13.4f |%15.4f |\n', i, j, sqrt(Isqr[i,j]), P[i,j], Q[i,j], Pperdas[i,j], Qperdas[i,j];
}
printf'|-------|-------|-----------|-----------|------------|--------------|----------------|\n';

printf'\n\n';

param PerdaTotal;
let PerdaTotal := sum{(i,j) in Ol}(Pperdas[i,j]);
printf'Para S = %d e Y = %d\nPerda Total = %f', S, Y, PerdaTotal;

printf'\n\n';

printf'Linhas desconectadas:';
for{(i,j) in Ol}{
	if (ymais[i,j] == 0 and ymenos[i,j] == 0) then
		printf'\n%d', linha[i,j];
}

printf "\n\nTempo do solucionador: %f s\n\n", _total_solve_elapsed_time;

# imprimindo as linhas desconectadas
#display {(i,j) in Ol: (ymais[i,j] == 0 and ymenos[i,j] == 0)};

option log_file ""; 
close;